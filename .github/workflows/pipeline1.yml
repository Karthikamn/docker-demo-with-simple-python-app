name: Python Application CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
env:
      DOCKER_IMAGE: karthikamn/python-app
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}      

jobs:
  Checkout-code:
    runs-on: ubuntu-latest

    
    
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3
  Log-in-to-Docker-Hub:
    needs: Checkout-code
    runs-on: ubuntu-latest
    steps:
      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
  Build-the-Docker-Hub:
    needs: Log-in-to-Docker-Hub
    runs-on: ubuntu-latest
    steps:    
      # Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t $DOCKER_IMAGE:${{ github.sha }} .
          docker tag $DOCKER_IMAGE:${{ github.sha }} $DOCKER_IMAGE:latest

  Push-image-to-Docker-Hub:
    needs: Build-the-Docker-Hub
    runs-on: ubuntu-latest
    steps:
    # Push the Docker image to Docker Hub
      - name: Push Docker image
        run: |
          docker push $DOCKER_IMAGE:${{ github.sha }}
          docker push $DOCKER_IMAGE:latest
  Sonar-Scan:
    needs: Push-image-to-Docker-Hub
    runs-on: ubuntu-latest
    steps:
      # Run SonarQube scan
      - name: Official SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v3.0.0
        with:
          projectBaseDir: .
          args: >
           -Dsonar.projectKey=GithubProject
           -Dsonar.host.url=${{ env.SONAR_HOST_URL }}
           -Dsonar.login=${{ env.SONAR_TOKEN }}
           -Dsonar.working.directory=./.scannerwork
  Sonar-Logs:
    needs: Sonar-Scan
    runs-on: ubuntu-latest
    steps:
      - name: Print SonarQube Logs
        run: |
          ls -al .scannerwork
          cat .scannerwork/report-task.txt || echo "report-task.txt not found"
          
    
 
            
      
